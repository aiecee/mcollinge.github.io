{"version":3,"sources":["./src/$_lazy_route_resource lazy","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/large-monsters/large-monsters-routing.module.ts","./src/app/large-monsters/large-monsters.module.ts","./src/app/large-monsters/monster-detail/monster-detail.component.html","./src/app/large-monsters/monster-detail/monster-detail.component.ts","./src/app/large-monsters/monster-list/monster-list.component.ts","./src/app/large-monsters/monster/monster.component.ts","./src/app/services/definitions.service.ts","./src/app/services/index.ts","./src/app/store/actions/index.ts","./src/app/store/actions/monster-detail.action.ts","./src/app/store/actions/monsters.action.ts","./src/app/store/effects/index.ts","./src/app/store/effects/monster-detail.effect.ts","./src/app/store/effects/monsters.effect.ts","./src/app/store/index.ts","./src/app/store/reducers/index.ts","./src/app/store/reducers/monster-detail.reducers.ts","./src/app/store/reducers/monsters.reducers.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/$$_lazy_route_resource lazy\n// module id = ./src/$$_lazy_route_resource lazy recursive\n// module chunks = main","import { NgModule } from \"@angular/core\";\r\nimport { RouterModule, Routes } from \"@angular/router\";\r\nimport { environment } from \"../environments/environment\";\r\n\r\nconst routes: Routes = [\r\n  { path: \"\", redirectTo: \"/monsters\", pathMatch: \"full\" },\r\n  { path: \"**\", redirectTo: \"/monsters\", pathMatch: \"full\" }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    RouterModule.forRoot(routes, {\r\n      enableTracing: !environment.production,\r\n      useHash: true\r\n    })\r\n  ],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule {}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app-routing.module.ts","import { Component, OnInit } from \"@angular/core\";\r\nimport { Router, NavigationEnd } from \"@angular/router\";\r\n\r\nimport \"rxjs/add/operator/do\";\r\n\r\nimport { Store } from \"@ngrx/store\";\r\n\r\ndeclare var gtag: Function;\r\n\r\n@Component({\r\n  selector: \"app-root\",\r\n  template: `\r\n  <section class=\"hero is-light\">\r\n    <div class=\"hero-body\">\r\n      <div class=\"container\">\r\n        <h1 class=\"title\">\r\n          MHW Reference\r\n        </h1>\r\n        <h2 class=\"subtitle\">\r\n          MHW weakness and classification quick reference\r\n        </h2>\r\n      </div>\r\n    </div>\r\n  </section>\r\n  <section class=\"section\">\r\n    <div class=\"container\">\r\n      <router-outlet></router-outlet>\r\n    </div>\r\n  </section>\r\n  `\r\n})\r\nexport class AppComponent implements OnInit {\r\n  constructor(private router: Router) {\r\n    this.router.events.subscribe(event => {\r\n      if (event instanceof NavigationEnd) {\r\n        gtag(\"config\", \"UA-114913099-1\", {\r\n          page_location: event.urlAfterRedirects\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {}\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { BrowserModule } from \"@angular/platform-browser\";\r\nimport { NgModule } from \"@angular/core\";\r\nimport { HttpClientModule } from \"@angular/common/http\";\r\n\r\nimport { StoreModule } from \"@ngrx/store\";\r\nimport { EffectsModule } from \"@ngrx/effects\";\r\nimport { StoreDevtoolsModule } from \"@ngrx/store-devtools\";\r\n\r\nimport { environment } from \"../environments/environment\";\r\n\r\nimport { AppComponent } from \"./app.component\";\r\nimport * as fromStore from \"./store\";\r\nimport * as fromServices from \"./services\";\r\nimport { FileSaveComponent } from \"./components/file-save/file-save.component\";\r\nimport { LargeMonstersModule } from \"./large-monsters/large-monsters.module\";\r\nimport { AppRoutingModule } from \"./app-routing.module\";\r\n\r\n@NgModule({\r\n  declarations: [AppComponent],\r\n  imports: [\r\n    BrowserModule,\r\n    HttpClientModule,\r\n    StoreModule.forRoot(fromStore.reducers),\r\n    EffectsModule.forRoot(fromStore.effects),\r\n    LargeMonstersModule,\r\n    AppRoutingModule,\r\n    StoreDevtoolsModule.instrument({\r\n      maxAge: 25,\r\n      logOnly: environment.production\r\n    })\r\n  ],\r\n  providers: [...fromServices.services],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule {}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","import { NgModule } from \"@angular/core\";\r\nimport { RouterModule, Routes } from \"@angular/router\";\r\n\r\nimport { MonsterListComponent } from \"./monster-list/monster-list.component\";\r\nimport { MonsterDetailComponent } from \"./monster-detail/monster-detail.component\";\r\n\r\nconst routes: Routes = [\r\n  { path: \"monsters\", component: MonsterListComponent },\r\n  { path: \"monsters/:id\", component: MonsterDetailComponent }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class LargeMonstersRoutingModule {}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/large-monsters/large-monsters-routing.module.ts","import { NgModule } from \"@angular/core\";\r\nimport { CommonModule } from \"@angular/common\";\r\n\r\nimport { MonsterListComponent } from \"./monster-list/monster-list.component\";\r\nimport { MonsterDetailComponent } from \"./monster-detail/monster-detail.component\";\r\nimport { MonsterComponent } from \"./monster/monster.component\";\r\nimport { LargeMonstersRoutingModule } from \"./large-monsters-routing.module\";\r\n\r\n@NgModule({\r\n  imports: [CommonModule, LargeMonstersRoutingModule],\r\n  declarations: [MonsterListComponent, MonsterDetailComponent, MonsterComponent]\r\n})\r\nexport class LargeMonstersModule {}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/large-monsters/large-monsters.module.ts","module.exports = \"<div class=\\\"tile is-ancestor\\\">\\r\\n    <div class=\\\"tile is-parent is-4\\\">\\r\\n        <article class=\\\"tile is-child notification is-light\\\">\\r\\n            <p class=\\\"title\\\">{{ (monster | async)?.name }}</p>\\r\\n            <p class=\\\"subtitle\\\">{{ (monster | async)?.type }}</p>\\r\\n            <figure class=\\\"image is-square\\\">\\r\\n                <img [src]=\\\"(monster | async)?.img\\\">\\r\\n            </figure>\\r\\n        </article>\\r\\n    </div>\\r\\n    <div class=\\\"tile\\\" *ngFor=\\\"let weakness of (monster | async)?.weaknesses\\\">\\r\\n        <div class=\\\"tile is-parent is-vertical\\\">\\r\\n            <article class=\\\"tile is-child notification is-light\\\">\\r\\n                <p class=\\\"title\\\">Elemental - {{ weakness.form }}</p>\\r\\n                <table class=\\\"table\\\">\\r\\n                    <tbody>\\r\\n                        <tr *ngFor=\\\"let state of weakness.elemental\\\">\\r\\n                            <td>{{ state.name }}</td>\\r\\n                            <td>\\r\\n                                <span *ngFor=\\\"let i of range(state.value)\\\" class=\\\"icon has-text-warning\\\">\\r\\n                                    <i class=\\\"fas fa-star\\\"></i>\\r\\n                                </span>\\r\\n                            </td>\\r\\n                        </tr>\\r\\n                    </tbody>\\r\\n                </table>\\r\\n            </article>\\r\\n            <article class=\\\"tile is-child notification is-light\\\">\\r\\n                <p class=\\\"title\\\">Ailments - {{ weakness.form }}</p>\\r\\n                <table class=\\\"table\\\">\\r\\n                    <tbody>\\r\\n                        <tr *ngFor=\\\"let state of weakness.ailments\\\">\\r\\n                            <td>{{ state.name }}</td>\\r\\n                            <td>\\r\\n                                <span *ngFor=\\\"let i of range(state.value)\\\" class=\\\"icon has-text-warning\\\">\\r\\n                                    <i class=\\\"fas fa-star\\\"></i>\\r\\n                                </span>\\r\\n                            </td>\\r\\n                        </tr>\\r\\n                    </tbody>\\r\\n                </table>\\r\\n            </article>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/large-monsters/monster-detail/monster-detail.component.html\n// module id = ./src/app/large-monsters/monster-detail/monster-detail.component.html\n// module chunks = main","import { Component, OnInit } from \"@angular/core\";\r\nimport { ActivatedRoute, Router, ParamMap } from \"@angular/router\";\r\n\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport \"rxjs/add/operator/switchMap\";\r\nimport \"rxjs/add/operator/share\";\r\n\r\nimport { Store } from \"@ngrx/store\";\r\n\r\nimport * as _ from \"lodash\";\r\n\r\nimport * as fromModels from \"../../models\";\r\nimport * as fromStore from \"../../store\";\r\nimport { GetMonsterDetail } from \"../../store\";\r\nimport { Title } from \"@angular/platform-browser\";\r\n\r\ndeclare var gtag: Function;\r\n\r\n@Component({\r\n  selector: \"app-monster-detail\",\r\n  templateUrl: \"./monster-detail.component.html\"\r\n})\r\nexport class MonsterDetailComponent implements OnInit {\r\n  monster: Observable<fromModels.IMonster>;\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private store: Store<fromStore.IAppState>,\r\n    private title: Title\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    window.scroll(0, 0);\r\n    this.monster = this.store\r\n      .select(fromStore.monsterDetailMonster)\r\n      .do(mon => {\r\n        if (mon) {\r\n          this.title.setTitle(\"Monster Hunter Reference - \" + mon.name);\r\n          gtag(\"event\", \"View \" + mon.name, {\r\n            event_category: \"View Monster Detail\",\r\n            event_label: mon.name\r\n          });\r\n        }\r\n      })\r\n      .share();\r\n    this.route.paramMap.subscribe((params: ParamMap) => {\r\n      this.store.dispatch(new GetMonsterDetail(params.get(\"id\")));\r\n    });\r\n  }\r\n\r\n  range(length: number): Array<number> {\r\n    return _.range(length);\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/large-monsters/monster-detail/monster-detail.component.ts","import { Component, OnInit } from \"@angular/core\";\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport { Title } from \"@angular/platform-browser\";\r\n\r\nimport { Store } from \"@ngrx/store\";\r\n\r\nimport * as fromStore from \"../../store\";\r\nimport * as fromModels from \"../../models\";\r\n\r\n@Component({\r\n  selector: \"app-monster-list\",\r\n  template: `\r\n  <div class=\"field\">\r\n    <div class=\"control\">\r\n      <input class=\"input\" type=\"text\" placeholder=\"Search\" (input)=\"searchTerm = $event.target.value\" (keyup)=\"search()\">\r\n    </div>\r\n  </div>\r\n  <div class=\"columns is-multiline\">\r\n    <div class=\"column is-one-quarter\" *ngFor=\"let monster of (monsters | async)\">\r\n      <app-monster [monster]=\"monster\" ></app-monster>\r\n    </div>\r\n  </div>\r\n`\r\n})\r\nexport class MonsterListComponent implements OnInit {\r\n  monsters: Observable<fromModels.IMonster[]>;\r\n  searchTerm: string;\r\n\r\n  constructor(\r\n    private store: Store<fromStore.IAppState>,\r\n    private title: Title\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    window.scroll(0, 0);\r\n    this.monsters = this.store.select(fromStore.monstersMonsters);\r\n    this.store.dispatch(new fromStore.GetMonsters(\"\"));\r\n  }\r\n\r\n  search() {\r\n    this.store.dispatch(new fromStore.GetMonsters(this.searchTerm));\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/large-monsters/monster-list/monster-list.component.ts","import { Component, OnInit, Input } from \"@angular/core\";\r\nimport { Router } from \"@angular/router\";\r\n\r\nimport * as fromModels from \"../../models\";\r\n\r\n@Component({\r\n  selector: \"app-monster\",\r\n  template: `\r\n    <div class=\"card\" (click)=\"onClick()\">\r\n      <div class=\"card-content\">\r\n        <div class=\"media\">\r\n          <div class=\"media-left\">\r\n            <figure class=\"image is-128x128\">\r\n              <img [src]=\"monster.img\" [alt]=\"monster.name\" >\r\n            </figure>\r\n          </div>\r\n          <div class=\"media-content\" style=\"overflow-y: hidden\">\r\n            <p class=\"title is-5\">{{ monster.name }}</p>\r\n            <p class=\"subtitle is-6\">{{ monster.type }}</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  `\r\n})\r\nexport class MonsterComponent implements OnInit {\r\n  @Input() monster: fromModels.IMonster;\r\n\r\n  constructor(private router: Router) {}\r\n\r\n  ngOnInit() {}\r\n\r\n  onClick() {\r\n    this.router.navigate([\"monsters\", this.monster.id]);\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/large-monsters/monster/monster.component.ts","import { Injectable } from \"@angular/core\";\nimport { HttpClient } from \"@angular/common/http\";\n\nimport { Observable } from \"rxjs/Observable\";\n\nimport * as _ from \"lodash\";\n\nimport { IDefinition, IDefinitionDictionary } from \"../models/definition.model\";\nimport { monsters } from \"../store\";\nimport { map } from \"rxjs/operators\";\n\nexport interface IDefinitionService {\n  load<TDefinition extends IDefinition>(\n    path: string\n  ): Observable<IDefinitionDictionary<TDefinition>>;\n\n  byId<TDefinition extends IDefinition>(\n    path: string,\n    id: string\n  ): Observable<TDefinition>;\n}\n\nexport const MONSTER_DEFINITIONS =\n  \"./assets/definitions/monster_definitions.json\";\n\n@Injectable()\nexport class DefinitionsService implements IDefinitionService {\n  constructor(private http: HttpClient) {}\n\n  load<TDefinition extends IDefinition>(\n    path: string\n  ): Observable<IDefinitionDictionary<TDefinition>> {\n    return this.http.get<IDefinitionDictionary<TDefinition>>(path);\n  }\n\n  byId<TDefinition extends IDefinition>(\n    path: string,\n    id: string\n  ): Observable<TDefinition> {\n    return this.http\n      .get<IDefinitionDictionary<TDefinition>>(path)\n      .pipe(map(dict => dict[id]));\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/definitions.service.ts","import { DefinitionsService } from \"./definitions.service\";\r\n\r\nexport const services = [DefinitionsService];\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/index.ts","export * from \"./monsters.action\";\r\nexport * from \"./monster-detail.action\";\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/store/actions/index.ts","import { Action } from \"@ngrx/store\";\r\nimport { IMonster } from \"../../models/monsters.model\";\r\n\r\nexport const GET_MONSTER_DETAIL = \"[Monster Detail] Get Monster\";\r\nexport const GET_MONSTER_DETAIL_SUCCESS =\r\n  \"[Monster Detail] Get Monster Success\";\r\nexport const GET_MONSTER_DETAIL_FAIL = \"[Monster Detail] Get Monster Fail\";\r\n\r\nexport class GetMonsterDetail implements Action {\r\n  readonly type = GET_MONSTER_DETAIL;\r\n  constructor(public id: string) {}\r\n}\r\n\r\nexport class GetMonsterDetailSuccess implements Action {\r\n  readonly type = GET_MONSTER_DETAIL_SUCCESS;\r\n  constructor(public monster: IMonster) {}\r\n}\r\n\r\nexport class GetMonsterDetailFail implements Action {\r\n  readonly type = GET_MONSTER_DETAIL_FAIL;\r\n  constructor(public error: any) {}\r\n}\r\n\r\nexport type MonsterDetailActions =\r\n  | GetMonsterDetail\r\n  | GetMonsterDetailSuccess\r\n  | GetMonsterDetailFail;\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/store/actions/monster-detail.action.ts","import { Action } from \"@ngrx/store\";\r\nimport { IMonster } from \"../../models/monsters.model\";\r\nimport { IDefinitionDictionary } from \"../../models/definition.model\";\r\n\r\nexport const GET_MONSTERS = \"[Monsters] Get Monsters\";\r\nexport const GET_MONSTERS_SUCCESS = \"[Monsters] Get All Success\";\r\nexport const GET_MONSTERS_FAIL = \"[Monsters] Get All Fail\";\r\n\r\nexport class GetMonsters implements Action {\r\n  readonly type = GET_MONSTERS;\r\n  constructor(public filter: string) {}\r\n}\r\n\r\nexport class GetMonstersSuccess implements Action {\r\n  readonly type = GET_MONSTERS_SUCCESS;\r\n  constructor(public monsters: IMonster[]) {}\r\n}\r\n\r\nexport class GetMonstersFail implements Action {\r\n  readonly type = GET_MONSTERS_FAIL;\r\n  constructor(public error: any) {}\r\n}\r\n\r\nexport type MonstersActions =\r\n  | GetMonsters\r\n  | GetMonstersSuccess\r\n  | GetMonstersFail;\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/store/actions/monsters.action.ts","import { MonstersEffects } from \"./monsters.effect\";\r\nimport { MonsterDetailEffects } from \"./monster-detail.effect\";\r\n\r\nexport const effects: any[] = [MonstersEffects, MonsterDetailEffects];\r\n\r\nexport * from \"./monsters.effect\";\r\nexport * from \"./monster-detail.effect\";\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/store/effects/index.ts","import { Injectable } from \"@angular/core\";\r\n\r\nimport { Effect, Actions } from \"@ngrx/effects\";\r\n\r\nimport { of } from \"rxjs/observable/of\";\r\nimport { map, switchMap, catchError } from \"rxjs/operators\";\r\n\r\nimport * as _ from \"lodash\";\r\nimport {\r\n  DefinitionsService,\r\n  MONSTER_DEFINITIONS\r\n} from \"../../services/definitions.service\";\r\nimport {\r\n  GET_MONSTER_DETAIL,\r\n  GetMonsterDetail,\r\n  GetMonsterDetailSuccess,\r\n  GetMonsterDetailFail\r\n} from \"../actions/monster-detail.action\";\r\nimport * as fromModels from \"../../models\";\r\n\r\n@Injectable()\r\nexport class MonsterDetailEffects {\r\n  @Effect()\r\n  monsterDetail = this.actions\r\n    .ofType(GET_MONSTER_DETAIL)\r\n    .pipe(\r\n      map((action: GetMonsterDetail) => action.id),\r\n      switchMap(id =>\r\n        this.defService\r\n          .byId(MONSTER_DEFINITIONS, id)\r\n          .pipe(\r\n            map(\r\n              monster =>\r\n                new GetMonsterDetailSuccess(<fromModels.IMonster>monster)\r\n            ),\r\n            catchError(error => of(new GetMonsterDetailFail(error)))\r\n          )\r\n      )\r\n    );\r\n\r\n  constructor(\r\n    private actions: Actions,\r\n    private defService: DefinitionsService\r\n  ) {}\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/store/effects/monster-detail.effect.ts","import { Injectable } from \"@angular/core\";\r\n\r\nimport { Effect, Actions } from \"@ngrx/effects\";\r\n\r\nimport { of } from \"rxjs/observable/of\";\r\nimport { map, switchMap, catchError } from \"rxjs/operators\";\r\n\r\nimport * as _ from \"lodash\";\r\n\r\nimport {\r\n  GET_MONSTERS,\r\n  GetMonsters,\r\n  GetMonstersSuccess,\r\n  GetMonstersFail\r\n} from \"../actions/monsters.action\";\r\nimport {\r\n  DefinitionsService,\r\n  MONSTER_DEFINITIONS\r\n} from \"../../services/definitions.service\";\r\n\r\nimport * as fromModels from \"../../models\";\r\n\r\n@Injectable()\r\nexport class MonstersEffects {\r\n  @Effect()\r\n  monsters = this.actions\r\n    .ofType(GET_MONSTERS)\r\n    .pipe(\r\n      map((action: GetMonsters) => action.filter),\r\n      switchMap(filter =>\r\n        this.defService\r\n          .load<fromModels.IMonster>(MONSTER_DEFINITIONS)\r\n          .pipe(\r\n            map(\r\n              monsters =>\r\n                new GetMonstersSuccess(\r\n                  _.values(monsters).filter(\r\n                    m => m.name.toLowerCase().indexOf(filter.toLowerCase()) >= 0\r\n                  )\r\n                ),\r\n              catchError(error => of(new GetMonstersFail(error)))\r\n            )\r\n          )\r\n      )\r\n    );\r\n\r\n  constructor(\r\n    private actions: Actions,\r\n    private defService: DefinitionsService\r\n  ) {}\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/store/effects/monsters.effect.ts","export * from \"./actions\";\r\nexport * from \"./effects\";\r\nexport * from \"./reducers\";\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/store/index.ts","import { ActionReducerMap, createSelector } from \"@ngrx/store\";\r\n\r\nimport * as fromMonsters from \"./monsters.reducers\";\r\nimport * as fromMonsterDetail from \"./monster-detail.reducers\";\r\n\r\nexport interface IAppState {\r\n  monsters: fromMonsters.IMonsterState;\r\n  monsterDetail: fromMonsterDetail.IMonsterDetailState;\r\n}\r\n\r\nexport const reducers: ActionReducerMap<IAppState> = {\r\n  monsters: fromMonsters.reduceMonsters,\r\n  monsterDetail: fromMonsterDetail.reduceMonsterDetail\r\n};\r\n\r\nexport const monsters = (state: IAppState) => state.monsters;\r\nexport const monstersMonsters = createSelector(monsters, fromMonsters.monsters);\r\nexport const monstersError = createSelector(monsters, fromMonsters.error);\r\n\r\nexport const monsterDetail = (state: IAppState) => state.monsterDetail;\r\nexport const monsterDetailMonster = createSelector(\r\n  monsterDetail,\r\n  fromMonsterDetail.monsterDetail\r\n);\r\nexport const monsterDetailError = createSelector(\r\n  monsterDetail,\r\n  fromMonsterDetail.error\r\n);\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/store/reducers/index.ts","import { IMonster } from \"../../models/monsters.model\";\r\nimport {\r\n  MonsterDetailActions,\r\n  GET_MONSTER_DETAIL_SUCCESS,\r\n  GetMonsterDetailSuccess,\r\n  GET_MONSTER_DETAIL_FAIL,\r\n  GetMonsterDetailFail\r\n} from \"../actions/monster-detail.action\";\r\n\r\nexport interface IMonsterDetailState {\r\n  monster: IMonster;\r\n  error: any;\r\n}\r\n\r\nexport const initialMonsterDetailState: IMonsterDetailState = {\r\n  monster: null,\r\n  error: null\r\n};\r\n\r\nexport function reduceMonsterDetail(\r\n  state = initialMonsterDetailState,\r\n  action: MonsterDetailActions\r\n): IMonsterDetailState {\r\n  switch (action.type) {\r\n    case GET_MONSTER_DETAIL_SUCCESS: {\r\n      const monster = (<GetMonsterDetailSuccess>action).monster;\r\n      return {\r\n        monster: monster,\r\n        error: null\r\n      };\r\n    }\r\n    case GET_MONSTER_DETAIL_FAIL: {\r\n      const error = (<GetMonsterDetailFail>action).error;\r\n      return {\r\n        ...state,\r\n        error: error\r\n      };\r\n    }\r\n  }\r\n  return state;\r\n}\r\n\r\nexport const monsterDetail = (state: IMonsterDetailState) => state.monster;\r\nexport const error = (state: IMonsterDetailState) => state.error;\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/store/reducers/monster-detail.reducers.ts","import { IMonster } from \"../../models/monsters.model\";\r\nimport {\r\n  MonstersActions,\r\n  GET_MONSTERS_SUCCESS,\r\n  GetMonstersSuccess,\r\n  GET_MONSTERS_FAIL,\r\n  GetMonstersFail\r\n} from \"../actions/monsters.action\";\r\n\r\nexport interface IMonsterState {\r\n  monsters: IMonster[];\r\n  error: any;\r\n}\r\n\r\nexport const initialMonstersState: IMonsterState = {\r\n  monsters: [],\r\n  error: null\r\n};\r\n\r\nexport function reduceMonsters(\r\n  state = initialMonstersState,\r\n  action: MonstersActions\r\n): IMonsterState {\r\n  switch (action.type) {\r\n    case GET_MONSTERS_SUCCESS: {\r\n      const monsters = (<GetMonstersSuccess>action).monsters;\r\n      return {\r\n        ...state,\r\n        monsters: monsters\r\n      };\r\n    }\r\n    case GET_MONSTERS_FAIL: {\r\n      const error = (<GetMonstersFail>action).error;\r\n      return {\r\n        ...state,\r\n        monsters: [],\r\n        error: error\r\n      };\r\n    }\r\n  }\r\n  return state;\r\n}\r\n\r\nexport const monsters = (state: IMonsterState) => state.monsters;\r\nexport const error = (state: IMonsterState) => state.error;\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/store/reducers/monsters.reducers.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts"],"sourceRoot":"webpack:///"}